class Solution {
public:
    int dpfun(int curr,int last,vector<vector<int>> &arr,vector<vector<int>> &dp){
        if(curr == arr.size()){
            return 0;
        }
        if(dp[curr+1][last+1]!=-1){
            return dp[curr+1][last+1];
        }
        else{
            if(last ==-1 or arr[curr][1] >= arr[last][1]){
                dp[curr+1][last+1] = arr[curr][1] + dpfun(curr+1,curr,arr,dp);
            }
            return dp[curr+1][last+1] = max(dp[curr+1][last+1],dpfun(curr+1,last,arr,dp));
        }
    }
    int bestTeamScore(vector<int>& scores, vector<int>& ages) {
        int n = ages.size();
        vector<vector<int>> dp(n+1,vector<int>(n+1,-1)),arr(n,vector<int>(2));
        for(int i=0;i<n;i++){
            arr[i] = {ages[i],scores[i]};
        }
        sort(arr.begin(),arr.end());
        return dpfun(0,-1,arr,dp);

    }
};
